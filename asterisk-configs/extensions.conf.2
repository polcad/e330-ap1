[globals]
SERVALD_AGI=/home/openbts/app_servaldna/servaldnaagi.py
SERVALD_BIN=/home/openbts/serval-dna/servald
SERVALD_INSTANCE=/var/serval-node

[test]
exten => 2600,1,Answer()
   same => n,Playback(tt-weasels)
   same => n,Hangup()

exten => 2601,1,Answer()
   same => n,Echo()
   same => n,Hangup()

[incoming-trunk]
exten => _X.,1,Macro(call-local)

; Outbound calls end up here
[outbound-trunk]
exten => _X.,1,AGI(${SERVALD_AGI},${SERVALD_BIN},${SERVALD_INSTANCE},${EXTEN})
   same => n,Verbose(AGI has run)
   same => n,Goto(${AGISTATUS})
; Lookup failed (check servald is running etc)
   same => n(FAILURE),Playback(tt-weasels)
   same => n,Verbose(weasels)
   same => n,Hangup()
; Lookup worked
   same => n(SUCCESS),Verbose(lookup done)
   same => n,Goto(${SDNAAGI_STATUS})
; Actually resolved something try and dial it
   same => n(RESOLVED),Dial(${SDNAAGI_DEST},25)
   same => n,Hangup()
; Couldn't find something for this DID
   same => n(UNRESOLVED),Playback(ss-noservice)
   same => n,Verbose(unresolved)
   same => n,Hangup()
include => test

[fix-callerid]
; Convert incoming CID from IMSIxxxx into a number
exten => s,1,Verbose(IMSI ${CALLERID(num)})
   same => n,Set(CALLERID(num)=${ODBC_SQL(select callerid from sip_buddies where name = \"${CALLERID(num)}\")})
   same => n,Verbose(Converted calling number to ${CALLERID(num)})
   same => n,Return()

[macro-call-local]
; Lookup destination number to get IMSI, IP & port
exten => s,1,Set(ARRAY(Name,IPAddr,Port)=${ODBC_SQL(select name\,ipaddr\,port from sip_buddies where callerid = \"${MACRO_EXTEN}\")})
; If we can't find it jump to other context to try and connect
   same => n,GotoIf($["${IPAddr}" = ""]?return)
   same => n,Verbose(Dialling SIP/${Name}@${IPAddr}:${PORT})
; Dial it
   same => n,Dial(SIP/${Name}@${IPAddr}:${PORT})
   same => n,Hangup()
   same => n(return),NoOp()

[openbts]
exten => _X.,1,Verbose(openbts context)
   same => n,Gosub(fix-callerid,s,1)
   same => n,GotoIf($[DIALPLAN_EXISTS(test,${EXTEN},1)]?test,${EXTEN},1)
   same => n,Macro(call-local)
   same => n,Goto(outbound-trunk,${EXTEN},1)

